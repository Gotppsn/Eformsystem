// Path: EFormBuilder/Pages/Forms/Index.razor
@page "/forms"
@using EFormBuilder.Models
@using EFormBuilder.Services
@inject IFormService FormService
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime

<div class="container mx-auto px-4 py-6">
    <div class="flex justify-between items-center mb-6">
        <h1 class="text-2xl font-bold">Forms</h1>
        <a href="/forms/builder" class="btn btn-primary">
            <i class="fas fa-plus-circle mr-2"></i> Create New Form
        </a>
    </div>
    
    @if (Forms == null)
    {
        <div class="text-center p-6">
            <div class="spinner-border text-primary" role="status">
                <span class="sr-only">Loading...</span>
            </div>
        </div>
    }
    else if (Forms.Count == 0)
    {
        <div class="bg-white rounded-lg shadow-md p-8 text-center">
            <div class="mb-4 text-5xl text-gray-400">
                <i class="fas fa-file-alt"></i>
            </div>
            <h3 class="text-xl font-semibold mb-2">No Forms Found</h3>
            <p class="text-gray-600 mb-4">You haven't created any forms yet. Click the button below to create your first form.</p>
            <a href="/forms/builder" class="btn btn-primary">
                <i class="fas fa-plus-circle mr-2"></i> Create Form
            </a>
        </div>
    }
    else
    {
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
            @foreach (var form in Forms)
            {
                <div class="bg-white rounded-lg shadow-md overflow-hidden">
                    <div class="p-6 border-b">
                        <h2 class="text-xl font-semibold mb-2 truncate">@form.Title</h2>
                        <p class="text-gray-500 text-sm mb-0">
                            Created @form.CreatedDate.ToString("MMM dd, yyyy")
                            @if (form.ModifiedDate.HasValue)
                            {
                                <span>â€¢ Updated @form.ModifiedDate.Value.ToString("MMM dd, yyyy")</span>
                            }
                        </p>
                    </div>
                    
                    <div class="p-6">
                        <p class="text-gray-600 mb-4 h-16 overflow-hidden">
                            @(string.IsNullOrEmpty(form.Description) ? "No description provided" : form.Description)
                        </p>
                        
                        <div class="flex flex-wrap text-sm text-gray-600 mb-4">
                            <div class="mr-4 mb-2">
                                <i class="fas fa-layer-group mr-1"></i> @(GetElementCount(form)) fields
                            </div>
                            <div class="mr-4 mb-2">
                                <i class="fas fa-clipboard-list mr-1"></i> @(GetSubmissionCount(form.Id)) submissions
                            </div>
                            @if (!string.IsNullOrEmpty(form.Department))
                            {
                                <div class="mb-2">
                                    <i class="fas fa-building mr-1"></i> @form.Department
                                </div>
                            }
                        </div>
                        
                        <div class="flex border-t pt-4">
                            <a href="/forms/@form.Id" class="text-center flex-1 text-primary hover:text-primary-dark px-2">
                                <i class="fas fa-edit mb-1 block mx-auto text-lg"></i>
                                <span class="text-xs">Fill</span>
                            </a>
                            <a href="/forms/builder/@form.Id" class="text-center flex-1 text-secondary hover:text-gray-700 px-2">
                                <i class="fas fa-cog mb-1 block mx-auto text-lg"></i>
                                <span class="text-xs">Edit</span>
                            </a>
                            <a href="/forms/submissions/@form.Id" class="text-center flex-1 text-success hover:text-green-700 px-2">
                                <i class="fas fa-clipboard-list mb-1 block mx-auto text-lg"></i>
                                <span class="text-xs">Submissions</span>
                            </a>
                            <button @onclick="() => DeleteForm(form.Id)" class="text-center flex-1 text-danger hover:text-red-700 px-2 bg-transparent border-0">
                                <i class="fas fa-trash-alt mb-1 block mx-auto text-lg"></i>
                                <span class="text-xs">Delete</span>
                            </button>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</div>

@code {
    private List<FormTemplate>? Forms { get; set; }
    private List<FormSubmission>? Submissions { get; set; }
    
    protected override async Task OnInitializedAsync()
    {
        Forms = await FormService.GetFormTemplates();
        Submissions = await FormService.GetFormSubmissions();
    }
    
    private int GetElementCount(FormTemplate form)
    {
        return form.Elements?.Count ?? 0;
    }
    
    private int GetSubmissionCount(string formId)
    {
        return Submissions?.Count(s => s.FormTemplateId == formId) ?? 0;
    }
    
    private async Task DeleteForm(string id)
    {
        var confirmed = await JSRuntime.InvokeAsync<bool>("confirm", "Are you sure you want to delete this form? All submissions will also be deleted.");
        
        if (confirmed)
        {
            await FormService.DeleteFormTemplate(id);
            Forms = await FormService.GetFormTemplates();
            Submissions = await FormService.GetFormSubmissions();
        }
    }
}