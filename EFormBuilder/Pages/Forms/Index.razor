@page "/forms"
@using EFormBuilder.Models
@using EFormBuilder.Services
@inject IFormService FormService
@inject NavigationManager NavigationManager

<div class="container mx-auto px-4 py-6">
    <div class="flex justify-between items-center mb-6">
        <h1 class="text-2xl font-bold">E-Forms</h1>
        <a href="/forms/builder" class="btn btn-primary">
            <i class="fas fa-plus mr-2"></i> Create New Form
        </a>
    </div>

    @if (Forms == null)
    {
        <div class="text-center p-6">
            <div class="spinner-border text-primary" role="status">
                <span class="sr-only">Loading...</span>
            </div>
        </div>
    }
    else if (Forms.Count == 0)
    {
        <div class="bg-white rounded-lg shadow-md p-8 text-center">
            <div class="mb-4 text-5xl text-gray-400">
                <i class="fas fa-file-alt"></i>
            </div>
            <h3 class="text-xl font-semibold mb-2">No Forms Found</h3>
            <p class="text-gray-600 mb-4">You haven't created any forms yet.</p>
            <a href="/forms/builder" class="btn btn-primary">
                <i class="fas fa-plus mr-2"></i> Create Your First Form
            </a>
        </div>
    }
    else
    {
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
            @foreach (var form in Forms)
            {
                <div class="bg-white rounded-lg shadow-md overflow-hidden">
                    <div class="p-5 border-b">
                        <h3 class="text-lg font-semibold mb-1">@form.Title</h3>
                        <div class="text-sm text-gray-500">@form.Department</div>
                    </div>
                    <div class="p-5">
                        <p class="text-gray-600 mb-4">@(string.IsNullOrEmpty(form.Description) ? "No description" : form.Description)</p>
                        <div class="flex items-center text-sm text-gray-500 mb-4">
                            <i class="fas fa-calendar-alt mr-2"></i>
                            <span>Created: @form.CreatedDate.ToString("MMM dd, yyyy")</span>
                        </div>
                        <div class="flex justify-between">
                            <a href="/forms/@form.Id" class="btn btn-primary">
                                <i class="fas fa-edit mr-1"></i> Fill Form
                            </a>
                            <div class="flex space-x-2">
                                <a href="/forms/builder/@form.Id" class="btn btn-secondary">
                                    <i class="fas fa-pencil-alt"></i>
                                </a>
                                <button class="btn btn-danger" @onclick="() => DeleteForm(form.Id)">
                                    <i class="fas fa-trash"></i>
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</div>

@code {
    private List<FormTemplate> Forms { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Forms = await FormService.GetFormTemplates();
    }

    private async Task DeleteForm(string id)
    {
        if (await JSRuntime.InvokeAsync<bool>("confirm", "Are you sure you want to delete this form?"))
        {
            await FormService.DeleteFormTemplate(id);
            Forms = await FormService.GetFormTemplates();
        }
    }
}